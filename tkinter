#что сделать:
#Изучить как выводить кнопки при определенном условии.
#после: доработать рынок
#понять как добавить скрол в визуал
#старая, рабочая версия в файле game архив

import random
import tkinter as tk
from contextlib import redirect_stdout




class person:
    def __init__(self, name, maxhp, hp, dmg, arm, pen):
        self.name = name
        self.maxhp = maxhp
        self.hp = hp
        self.dmg = dmg
        self.arm = arm
        self.pen = pen


# игрок
player_hp = random.randint(170, 200)
player_dmg = random.randint(7, 10)
player_arm = random.randint(0, 3)
player_pen = random.randint(0, 3)

player = person("knight", player_hp, player_hp, player_dmg, player_arm, player_pen)

# счетчики
grade = 1
level = 0
gold = 99990

status = "camp"

def fight():
    global person, player, grade, level, gold
    enemy = person("monster", 0, random.randint(15, 20), random.randint(1, 3), random.randint(0, 1), random.randint(0, 1))
    with redirect_stdout(TextWrapper(text)):
    	print("---сражение") 
    	print(vars(player))
    	print(vars(enemy))
    	print("-")
    r = 0
    while True:
        if player.hp > 0 and enemy.hp > 0:
            player.hp -= enemy.dmg + random.randint(0, 7) + level + grade - max(player.arm - enemy.pen, 0)
            enemy.hp -= player.dmg + random.randint(0, 7) - max(enemy.arm - player.pen, 0)
            r += 1
            with redirect_stdout(TextWrapper(text)):
            	print("раунд: ", r)
            	print(str(player.hp) + " (-" + str(enemy.dmg + random.randint(0, 7) + level + grade - max(player.arm - enemy.pen, 0)) + ")")
            	print(str(enemy.hp) + " (-" + str(player.dmg + random.randint(0, 7) - max(enemy.arm - player.pen, 0)) + ")")
        else:
            if player.hp > 0:
                with redirect_stdout(TextWrapper(text)):
                	print("победа")
                print()
                gold += (random.randint(3, 5) + level)
                return gold, player
            else:
                with redirect_stdout(TextWrapper(text)):
                	print("поражение. Игра окончена")
                print()
                return player


def rest():

    global player
    player.hp = min(player.maxhp, player.hp + 10)
    with redirect_stdout(TextWrapper(text)):
    	print("---безопасное место. вы воссстановили часть здоровья")
    	print(vars(player))
    print()
    return player


# функция ловушки
def trap():
    global player
    player.hp -= 10
    with redirect_stdout(TextWrapper(text)):
    	print("---it's a trap!. Вы потеряли часть здоровья")
    	print(vars(player))
    print()
    return player


def down():
    global status, level, act
    status = "down"
    with redirect_stdout(TextWrapper(text)):
    	print("---уровень подземелья - " + str(level))
    f = random.choices([fight, rest, trap], weights=[5, 1, 1])
    rand_func = random.choice(f)
    rand_func()
    level += 1
    return level


def up():
    global status, level, grade, player, player_hp
    if level == 0:
        with redirect_stdout(TextWrapper(text)):
        	print("Вы в лагере")
    elif level > 0:
        with redirect_stdout(TextWrapper(text)):
        	print("---вы возвращаетесь в лагерь")
        	print("---уровень подземелья - " + str(level))
        f = random.choices([fight, rest, trap], weights=[1, 7, 1])
        rand_func = random.choice(f)
        rand_func()
        level -= 1
        return level
    else:
        level = 0
        grade += 1
        status = "camp"
        player.hp = min(player.maxhp, player.hp + 20)
        with redirect_stdout(TextWrapper(text)):
        	print("---вы вернулись. Оно того стоило?")
        return status, grade


def market():
    global status, act, gold, player, player_hp
    print("---золото - " + str(gold))
    class item:
        def __init__(self, name, maxhp, hp, dmg, arm, pen, price):
            self.name = name
            self.maxhp = maxhp
            self.hp = hp
            self.dmg = dmg
            self.arm = arm
            self.pen = pen
            self.price = price

    item1 = item("might", 0, 0, 2, 0, 0, 50)
    item2 = item("armor", 20, 20, 0, 0, 0, 50)
    item3 = item("attack", 0, 0, 0, 1, 0, 50)
    item4 = item("def", 0, 0, 0, 0, 1, 50)
    item5 = item("heal", 0, 50, 0, 0, 0, 50)

    select = {
        1:item1,
        2:item2,
        3:item3,
        4:item4,
        5:item5,
        }

    productlist = {
        "-": "Что хотите купить?",
        1: "меч +" + str(item1.dmg),
        2: "броня +" + str(item2.maxhp),
        3: "тренировка защиты +" + str(item3.arm),
        4: "тренировка атаки +" + str(item4.pen),
        5: "лечение +" + str(item5.hp),
        "0": "Вернуться в лагерь"
        }

    print(productlist)
    select_item = select[int(1)]
    if int(select_item.price) > gold:
        print("Недостаточно золота")
        market()
    else:
        print("Куплен " + str(select_item.name))
        gold -= select_item.price
        player.maxhp += select_item.maxhp
        player.hp = min(player.maxhp, player.hp + select_item.hp)
        player.dmg += select_item.dmg
        player.arm += select_item.arm
        player.pen += select_item.pen
        print(vars(player))
        return status, player, gold


#основное окно
win = tk.Tk()
win.geometry(f"40x50+1+1")
win.title("Игра")




#команда для вывода текста на экран. в нее перелается текст из функций через with redirect_stdout(TextWrapper(text)): 
class TextWrapper:
    def __init__(self, text_field: tk.Text):
        self.text_field = text_field

    def write(self, text: str):
        self.text_field.insert(tk.END, text)

    def flush(self):
        self.text_field.update()




text = tk.Text(win)
text.pack()




#кнопки
btn_fight = tk.Button(win, text = "fight", command = fight)
btn_fight.pack()

btn_down = tk.Button(win, text = "down", command = down)
btn_down.pack()

btn_up = tk.Button(win, text = "up", command = up)
btn_up.pack()

btn_market = tk.Button(win, text = "market", command = market)
btn_market.pack()


btn_exit = tk.Button(win, text = "закрыть", command = quit)
btn_exit.pack()
def quit(self):
        self.root.destroy()


win.mainloop()
