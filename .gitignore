import random

class person:
	def __init__ (self, name, hp, dmg):
		self.name = name
		self.hp = hp
		self.dmg = dmg


#игрок
player_hp = random.randint(70, 100)
player_dmg = random.randint(5,7)

player = person("knight", player_hp, player_dmg)
print(vars(player))


#противник1
enemy_hp = random.randint(5, 7)
enemy_dmg = random.randint(1,3)

enemy = person("monster", enemy_hp, enemy_dmg)
print(vars(enemy))


#счетчики
grade = 1
level = 0
gold = 0

#положение персонажа. camp - в лагере, down - спускается внин, up - возвращается в лагерь
status = "camp"


#функция битвы
def fight():
	print("сражение")
	global player, enemy, grade, level, gold
	print(vars(enemy))
	while True:
		if player.hp > 0 and enemy.hp > 0:
			print(vars(player))
			print(vars(enemy))
			player.hp -=enemy.dmg+random.randint(0, 7)+level
			print(vars(player))
			enemy.hp -=player.dmg+random.randint(0, 7)
			print(vars(enemy))
		else:
			if player.hp > 0:
				print("победа")
				print()
				print(vars(player))
				gold += (random.randint(3, 5)+level)
				enemy.hp = enemy_hp
				return gold, player
			else:
				print("поражение. Игра окончена")
				print()
				return player
				break


#варианты дейсивий в лагере.
def camp():
	global status
	print("игрок в лагере. Спускаемся в подземелье? да/нет")
	x = input()
	if x == "да":
		status = "down"
		fight()
		return status
	else:
		print("Ошибка. повторите")

#варианты действий в подземелье
def down():
	global status, level
	print("вы в подземелье. идем дальше? да/нет")
	x = input()
	if x == "да":
		fight()
		level += 1
		return level
	elif x == "нет":
		status = "up"
		return status
	else:
		print("Ошибка. повторите")

#подьем на поверхность.
def up():
	print("вы возвращаетесь в лагерь")
	global status, level
	if level > 0:
		fight()
		level -= 3
		return level
	else:
		level = 0
		status = "camp"
		print("вы вернулись")
		return status

#действия игрока
while True:
	if player.hp < 0:
		print("игра окончена")
		break
	if status == "camp":
		print(vars(player))
		print(level)
		camp()
	elif status == "down":
		down()
		print(vars(player))
		print(level)
	else:
		up()
